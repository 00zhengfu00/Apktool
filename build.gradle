apply plugin: 'java'
apply plugin: 'maven'

repositories {
  mavenCentral()
}

dependencies {
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.2'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'

    repositories {
       mavenCentral()
    }
    dependencies {
        testCompile 'junit:junit:4.8.2'
    }
}
    project(':brut.j.common') {
	dependencies {
	  testCompile "junit:junit:3.8.1"
	}
    }
    project(':brut.j.util') {
	dependencies {
	  compile project(':brut.j.common'), "commons-io:commons-io:1.4"
	  testCompile "junit:junit:3.8.1"
	}
    }
    project(':brut.j.dir') {
	dependencies {
	  compile project(':brut.j.common'), project(':brut.j.util')
	  testCompile "junit:junit:3.8.1"
	}
    }
    project(':brut.apktool.smali:util') {
	dependencies {
	  compile 'commons-cli:commons-cli:1.2'
	  testCompile 'junit:junit:4.6'
	}
    }
    project(':brut.apktool.smali:dexlib') {
	dependencies {
	  compile 'com.google.code.findbugs:jsr305:1.3.9'
	  compile 'com.google.collections:google-collections:1.0'
	}
    }
    project(':brut.apktool.smali:baksmali') {
	dependencies {
	    compile project(':brut.apktool.smali:util'), project(':brut.apktool.smali:dexlib')
	    compile 'commons-cli:commons-cli:1.2'
	    compile 'com.google.code.findbugs:jsr305:1.3.9'
	}
    }
    project(':brut.apktool:apktool-lib') {
      ext.baseVersion = '1.5.1'
      ext.jarVersion = baseVersion

	      def versionSuffix
	      try {
		  def git = org.eclipse.jgit.api.Git.open(file('.'))
		  def head = git.getRepository().getRef("HEAD")
		  versionSuffix = head.getObjectId().abbreviate(8).name()

		  if (!git.status().call().clean) {
		      versionSuffix += '-dirty'
		  }
	      } catch (Exception) {
		  // In case we can't get the commit for some reason,
		  // just use -dev
		  versionSuffix = 'SNAPSHOT'
	      }

	      version = baseVersion + '-' + versionSuffix

	      // use <version>-dev for the jar name, rather than the
	      // full commit+dirty string
	      jarVersion = baseVersion + '-dev'

	  jar {
	      version = jarVersion
	  }
	dependencies {
	    compile ("junit:junit:4.10") {
			exclude(module: 'hamcrest-core')
	    }
	    compile project(':brut.j.dir'), project(':brut.j.util'), project(':brut.j.common'), project(':brut.apktool.smali:util'),
			    project(':brut.apktool.smali:dexlib'), project(':brut.apktool.smali:baksmali'),project(':brut.apktool.smali:smali'),
			    "org.yaml:snakeyaml:1.7", "xpp3:xpp3:1.1.4c","xmlunit:xmlunit:1.3", "com.google.guava:guava:12.0",
			    "org.apache.commons:commons-lang3:3.1", "net.lingala.zip4j:zip4j:1.3.1"
	}
    }
    project(':brut.apktool:apktool-cli') {
	gradle.taskGraph.whenReady {
	    // build a jar containing all dependencies
	    jar {
		from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

		manifest {
		    attributes("Main-Class": "brut.apktool.Main")
		}
	    }
	}

	dependencies {
	    compile project(':brut.apktool:apktool-lib')
	}
    }